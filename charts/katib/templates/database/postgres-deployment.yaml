{{- if and .Values.database.postgres.enabled (eq .Values.database.type "postgres") }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "katib.fullname" . }}-postgres
  namespace: {{ include "katib.namespace" . }}
  labels:
    {{- include "katib.postgres.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "katib.postgres.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "katib.postgres.selectorLabels" . | nindent 8 }}
        {{- if .Values.istio.enabled }}
        sidecar.istio.io/inject: "false"
        {{- end }}
      annotations:
        {{- with .Values.database.postgres.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.postgres.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: katib-postgres
          image: {{ include "katib.image" (dict "registry" .Values.global.imageRegistry "repository" .Values.database.postgres.image.repository "tag" .Values.database.postgres.image.tag "global" .Values.global) }}
          imagePullPolicy: {{ .Values.database.postgres.image.pullPolicy | default .Values.global.imagePullPolicy }}
          {{- with .Values.database.postgres.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "katib.database.secretName" . }}
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            {{- with .Values.database.postgres.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          {{- if .Values.database.postgres.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "{{ .Values.database.postgres.auth.username }}" -h 127.0.0.1 -p 5432
            initialDelaySeconds: {{ .Values.database.postgres.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.database.postgres.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.database.postgres.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.database.postgres.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.database.postgres.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "{{ .Values.database.postgres.auth.username }}" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: {{ .Values.database.postgres.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.database.postgres.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.database.postgres.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.database.postgres.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.database.postgres.readinessProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
            - name: katib-postgres
              mountPath: /var/lib/postgresql/data
            {{- with .Values.database.postgres.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.database.postgres.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: katib-postgres
          {{- if .Values.database.postgres.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "katib.fullname" . }}-postgres
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- with .Values.database.postgres.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.database.postgres.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.postgres.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.database.postgres.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 
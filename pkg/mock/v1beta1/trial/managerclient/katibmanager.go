// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubeflow/katib/pkg/controller.v1beta1/trial/managerclient (interfaces: ManagerClient)
//
// Generated by this command:
//
//	mockgen -package mock -destination pkg/mock/v1beta1/trial/managerclient/katibmanager.go github.com/kubeflow/katib/pkg/controller.v1beta1/trial/managerclient ManagerClient
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	v1beta1 "github.com/kubeflow/katib/pkg/apis/controller/trials/v1beta1"
	api_v1_beta1 "github.com/kubeflow/katib/pkg/apis/manager/v1beta1"
	gomock "go.uber.org/mock/gomock"
)

// MockManagerClient is a mock of ManagerClient interface.
type MockManagerClient struct {
	ctrl     *gomock.Controller
	recorder *MockManagerClientMockRecorder
}

// MockManagerClientMockRecorder is the mock recorder for MockManagerClient.
type MockManagerClientMockRecorder struct {
	mock *MockManagerClient
}

// NewMockManagerClient creates a new mock instance.
func NewMockManagerClient(ctrl *gomock.Controller) *MockManagerClient {
	mock := &MockManagerClient{ctrl: ctrl}
	mock.recorder = &MockManagerClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManagerClient) EXPECT() *MockManagerClientMockRecorder {
	return m.recorder
}

// DeleteTrialObservationLog mocks base method.
func (m *MockManagerClient) DeleteTrialObservationLog(arg0 *v1beta1.Trial) (*api_v1_beta1.DeleteObservationLogReply, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTrialObservationLog", arg0)
	ret0, _ := ret[0].(*api_v1_beta1.DeleteObservationLogReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteTrialObservationLog indicates an expected call of DeleteTrialObservationLog.
func (mr *MockManagerClientMockRecorder) DeleteTrialObservationLog(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTrialObservationLog", reflect.TypeOf((*MockManagerClient)(nil).DeleteTrialObservationLog), arg0)
}

// GetTrialObservationLog mocks base method.
func (m *MockManagerClient) GetTrialObservationLog(arg0 *v1beta1.Trial) (*api_v1_beta1.GetObservationLogReply, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTrialObservationLog", arg0)
	ret0, _ := ret[0].(*api_v1_beta1.GetObservationLogReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTrialObservationLog indicates an expected call of GetTrialObservationLog.
func (mr *MockManagerClientMockRecorder) GetTrialObservationLog(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTrialObservationLog", reflect.TypeOf((*MockManagerClient)(nil).GetTrialObservationLog), arg0)
}

// ReportTrialObservationLog mocks base method.
func (m *MockManagerClient) ReportTrialObservationLog(arg0 *v1beta1.Trial, arg1 *api_v1_beta1.ObservationLog) (*api_v1_beta1.ReportObservationLogReply, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReportTrialObservationLog", arg0, arg1)
	ret0, _ := ret[0].(*api_v1_beta1.ReportObservationLogReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReportTrialObservationLog indicates an expected call of ReportTrialObservationLog.
func (mr *MockManagerClientMockRecorder) ReportTrialObservationLog(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportTrialObservationLog", reflect.TypeOf((*MockManagerClient)(nil).ReportTrialObservationLog), arg0, arg1)
}
